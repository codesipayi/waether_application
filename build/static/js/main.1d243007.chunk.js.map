{"version":3,"sources":["App.js","index.js"],"names":["API_KEY","process","console","log","BASE_URL","App","useState","city","setCity","error","setError","temparature","setTemparature","useEffect","getLocation","navigator","geolocation","getCurrentPosition","success","position","lat","coords","latitude","lon","longitude","updateCurrentLocationTemp","hitApi","url","a","response","fetch","then","res","json","data","catch","err","cod","main","temp","message","handleSearch","e","preventDefault","className","onSubmit","onChange","target","value","type","id","name","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAGMA,G,MAAUC,oCAChBC,QAAQC,IAAIF,iUACZ,IAAMG,EAAQ,mDAwFCC,EAvFH,WAAO,IAAD,EACQC,mBAAS,SADjB,mBACTC,EADS,KACHC,EADG,OAEUF,mBAAS,MAFnB,mBAETG,EAFS,KAEFC,EAFE,OAGsBJ,mBAAS,MAH/B,mBAGTK,EAHS,KAGIC,EAHJ,KAKhBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAc,WACdC,UAAUC,YACZD,UAAUC,YAAYC,mBAAmBC,GAEzChB,QAAQC,IAAI,iDAIVe,EAAU,SAACC,GACf,IAAIC,EAAMD,EAASE,OAAOC,SACtBC,EAAMJ,EAASE,OAAOG,UAC1BC,EAA0BL,EAAKG,IAG3BG,EAAM,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACTC,EAAW,KADF,SAEPC,MAAMH,GACTI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJhC,QAAQC,IAAI+B,GACZL,EAAWK,KAEZC,OAAM,SAAAC,GACLlC,QAAQC,IAAIiC,MATH,gCAYNP,GAZM,2CAAH,sDAeNJ,EAAyB,uCAAG,WAAOL,EAAKG,GAAZ,iBAAAK,EAAA,6DAC5BD,EAAMvB,EAAQ,cAAUgB,EAAV,gBAAqBG,EAArB,+BAA+CvB,GADjC,SAEf0B,EAAOC,GAFQ,OAGf,OADbO,EAF4B,QAGvBG,KACP3B,EAAS,MACTE,EAAesB,EAAKI,KAAKC,OAGzB7B,EAASwB,EAAKM,SARgB,2CAAH,wDAWzBC,EAAY,uCAAG,WAAOC,GAAP,iBAAAd,EAAA,6DACnBc,EAAEC,iBACEhB,EAAMvB,EAAQ,YAAQG,EAAR,+BAAmCP,GAFlC,SAGF0B,EAAOC,GAHL,OAIF,OADbO,EAHe,QAIVG,IACPzB,EAAesB,EAAKI,KAAKC,MAEzB7B,EAASwB,EAAKM,SAPG,2CAAH,sDASlB,OACE,6BACE,wBAAII,UAAU,WAAd,WACA,yBAAKA,UAAU,aACb,0BAAMC,SAAUJ,GACd,2BAAOG,UAAU,WAAWE,SAAU,SAACJ,GAAD,OAAOlC,EAAQkC,EAAEK,OAAOC,QAAQC,KAAK,OAAOC,GAAG,YAAYC,KAAK,cACtG,4BAAQP,UAAU,eAAeK,KAAK,SAASG,QAASX,GAAxD,aAGH9B,IAAgBF,GACf,yBAAKmC,UAAU,iBACb,yBAAKA,UAAU,aACb,4CACA,2BAAIjC,EAAJ,OAILF,GACC,yBAAKmC,UAAU,iBACb,yBAAKA,UAAU,aACb,2BAAInC,OChFhB4C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1d243007.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconsole.log(process.env);\r\nconst BASE_URL = `https://api.openweathermap.org/data/2.5/weather?`;\r\nconst App = () => {\r\n  const [city, setCity] = useState('sirsi');\r\n  const [error, setError] = useState(null);\r\n  const [temparature, setTemparature] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getLocation();\r\n  }, []);\r\n\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(success);\r\n    } else {\r\n      console.log(\"Geolocation is not supported by this browser\");\r\n    }\r\n  }\r\n\r\n  const success = (position) => {\r\n    let lat = position.coords.latitude;\r\n    let lon = position.coords.longitude;\r\n    updateCurrentLocationTemp(lat, lon);\r\n  }\r\n\r\n  const hitApi = async (url) => {\r\n    let response = null;\r\n    await fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        response = data;\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n    return response;\r\n  }\r\n\r\n  const updateCurrentLocationTemp = async (lat, lon) => {\r\n    let url = BASE_URL + `lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`;\r\n    let data = await hitApi(url);\r\n    if (data.cod === 200) {\r\n      setError(null);\r\n      setTemparature(data.main.temp);\r\n    }\r\n    else\r\n      setError(data.message);\r\n  }\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    let url = BASE_URL + `q=${city}&units=metric&appid=${API_KEY}`;\r\n    let data = await hitApi(url);\r\n    if (data.cod === 200)\r\n      setTemparature(data.main.temp);\r\n    else\r\n      setError(data.message);\r\n  }\r\n  return (\r\n    <div>\r\n      <h1 className=\"weather\">Weather</h1>\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSearch}>\r\n          <input className=\"inputbox\" onChange={(e) => setCity(e.target.value)} type=\"text\" id=\"inputCity\" name=\"inputCity\"></input>\r\n          <button className=\"searchbutton\" type=\"submit\" onClick={handleSearch}>Search!</button>\r\n        </form>\r\n      </div>\r\n      {temparature && !error &&\r\n        <div className=\"weatherResult\">\r\n          <div className=\"resultBox\">\r\n            <h5>Temperature:</h5>\r\n            <p>{temparature}C</p>\r\n          </div>\r\n        </div>\r\n      }\r\n      {error &&\r\n        <div className=\"weatherResult\">\r\n          <div className=\"resultBox\">\r\n            <p>{error}</p>\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}